#
# oofemlib target makefile
#

SHELL      = @SHELL@
#
PETSC_DIR  = @PETSC_DIR@
PETSC_ARCH = @PETSC_ARCH@
BOPT       = @PETSC_BOPT@
@PETSC_MAKE_INCLUDE@
SLEPC_DIR = @SLEPC_DIR@
@SLEPC_MAKE_INCLUDE@

INCLUDE_DIR= @OOFEMLIB_INCLUDES@ @TARGET_CONFIG_INCLUDES@ @IML_INCLUDES@ @TINYXML_INCLUDES@ @SPOOLES_INCLUDES@ @PETSC_INCLUDES@ @PARMETIS_INCLUDES@ @DSS_INCLUDES@ @CKIT_INCLUDES@ @ELIXIR_INCLUDES@ @MPI_INCLUDES@ @SLEPC_INCLUDES@
SYMBOLS    = @MODULE_SYMBOLS@
#   Libraries
LOCAL_LIBS = @ELIXIR_LIBS@ @CKIT_LIB@
SYS_LIBS  =  @LIBS@ @X_PRE_LIBS@ @X_LIBS@ @X_EXTRA_LIBS@
#Compiler flags
CFLAGS      = @CXXFLAGS@ @MODULE_SYMBOLS@
LDFLAGS     = $(CFLAGS) @LDFLAGS@
#
#
LD         = @CXX@
CC         = @CXX@
#
AR         = ar -r
RM         = rm -f

MAKEDEPEND= $(CC) -M $(CFLAGS) $(SYMBOLS) $(INCLUDE_DIR) -o $*.d $<
#search *.C *.cpp files in these directories
VPATH=@OOFEM_DIR@/src/oofemlib @OOFEM_DIR@/src/oofemlib/xfem @OOFEM_DIR@/src/oofemlib/iga @OOFEM_DIR@/src/oofemlib/iml @TINYXML_DIR@

## sources
srcs0=rveengngmodel.C
srcs1=oofeggraphiccontext.C
srcs2=generalbc.C boundary.C clock.C cltypes.C conTable.C constant.C crosssection.C dictionr.C dof.C domain.C element.C engngm.C femcmpnn.C flotarry.C flotmtrx.C freestor.C error.C logger.C emptycs.C feinterpol.C reinforcement.C
srcs3=gausspnt.C initial.C intarray.C isolinearelasticmaterial.C ldltfact.C linearelasticmaterial.C load.C loadtime.C rowcol.C skylineu.C sparselinsystemnm.C inverseit.C
srcs4=material.C mathfem.C matrix.C nlstructuralelement.C node.C nodload.C simplecrosssection.C skyline.C inputrecord.C dynamicinputrecord.C dynamicdatareader.C tokenizer.C strreader.C structuralcrosssection.C structuralelement.C structuralmaterial.C structengngmodel.C
srcs5=structuralms.C timestep.C dofmanager.C elementside.C elementinternaldofman.C integrationrule.C boundaryload.C gaussintegrationrule.C masterdof.C simpleslavedof.C slavedof.C activedof.C nonlocalmaterialext.C linearedgeload.C constantedgeload.C constantsurfaceload.C lobattoir.C
srcs6=outputmanager.C compiler.C parser.C rigidarmnode.C spatiallocalizer.C dummylocalizer.C octreelocalizer.C nodalrecoverymodel.C util.C sloangraph.C sloangraphnode.C sloanlevelstruct.C metastep.C exportmodule.C exportmodulemanager.C initmodulemanager.C initmodule.C zznodalrecoverymodel.C nodalaveragingrecoverymodel.C sprnodalrecoverymodel.C
srcs7=calmls.C nrsolver.C nrsolver2.C subspaceit.C  gjacobi.C linesearch.C nonlocalbarrier.C primaryfield.C field.C maskedprimaryfield.C fieldmanager.C oofemtxtdatareader.C oofemtxtinputrecord.C buffereddatareader.C stressstrainbasevector.C stressvector.C strainvector.C fei1dlin.C fei1dquad.C fei1dhermite.C fei2dquadlin.C  fei2dquadquad.C fei2dtrlin.C fei3dlinelin.C fei3dtrlin.C fei3dhexalin.C spoolessparsemtrx.C spoolessolver.C petscsparsemtrx.C petscsolver.C petsccontext.C slavenode.C hangingnode.C pointload.C slepcsolver.C
srcs8=errorestimator.C remeshingcrit.C primaryunknownmapper.C materialmappingalgorithm.C dofdistributedprimaryfield.C domaintransactionmanager.C fei2dtrquad.C fei2dtrconst.C fei2dquadconst.C fei2dlinelin.C fei2dlinequad.C fei2dlinehermite.C localgaussianrandomgenerator.C randommaterialext.C externalfieldgenerator.C
srcs9=geotoolbox.C dss.C dsssolver.C intvarfield.C localgaussianrandomgenerator.C fei3dhexaquad.C fei3dtetquad.C geometry.C homexportmodule.C homogenize.C prescribedgradient.C surfacetensionbc.C mixedgradientpressurebc.C mixedgradientpressureneumann.C mixedgradientpressuredirichlet.C
srcs10=peak.C piecewis.C piecewisblock.C piecewisper.C heavisideltf.C usrdeftimefunct.C vtkexportmodule.C vtkxmlexportmodule.C smoothednodalintvarfield.C eleminterpunknownmapper.C meshqualityerrorestimator.C dofmanvalfield.C

imlsrc=imlsolver.C compcol.C dyncompcol.C symcompcol.C dyncomprow.C iluprecond.C precond.C icprecond.C diagpre.C ilucomprowprecond.C voidprecond.C

xfemsrc=delaunay.C xfemelementinterface.C enrichmentfunction.C patch.C xfemmanager.C enrichmentitem.C patchintegrationrule.C

igasrc=iga.C feibspline.C feinurbs.C feitspline.C structuralelementevaluator.C planestresselementevaluator.C space3delementevaluator.C igaelements.C

#obsolete
srcs99=
#parallel
psrcs1=communicator.C processcomm.C problemcomm.C combuff.C petscordering.C dyncombuff.C loadbalancer.C parmetisloadbalancer.C nonlocalmatwtp.C

#check for presence of -D__TINYXML_MODULE directive
ifneq (,$(findstring -D__TINYXML_MODULE,$(CFLAGS)))
  tinyxmlsrc=tinystr.cpp tinyxml.cpp tinyxmlerror.cpp tinyxmlparser.cpp
else
  #create empty string
  tinyxmlsrc=
endif

all_src = $(srcs0) $(srcs1) $(srcs2) $(srcs3) $(srcs4) $(srcs5) $(srcs6) $(srcs7) $(srcs8) $(srcs9) $(srcs10) $(xfemsrc) $(imlsrc) $(igasrc) $(psrcs1) $(tinyxmlsrc)

## object files - filter 2 times
oofemLib_objs1 := $(all_src:.C=.o)
oofemLib_objs2 := $(oofemLib_objs1:.cpp=.o)
## dependency files - filter 2 times
oofemLib_deps1 := $(all_src:.C=.d)
oofemLib_deps2 := $(oofemLib_deps1:.cpp=.d)

all: liboofemlib.a
	echo all target done

-include $(oofemLib_deps)


%.o:	%.C
	@$(MAKEDEPEND)
	$(CC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $< -o $@

%.o:	%.c
	@$(MAKEDEPEND)
	$(CC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $< -o $@

%.o:	%.cpp
	@$(MAKEDEPEND)
	$(CC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $< -o $@


liboofemlib.a:  $(oofemLib_objs2)
	echo huhu
	rm -f liboofemlib.a
	@echo $(AR) liboofemlib.a
	@$(AR) liboofemlib.a $(oofemLib_objs2)

deps:   $(oofemLib_deps2)

clean::
	rm -fr *.o *.d *.a


