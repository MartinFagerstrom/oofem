#
# libsm target makefile
#

SHELL      = @SHELL@
#
PETSC_DIR  = @PETSC_DIR@
PETSC_ARCH = @PETSC_ARCH@
BOPT       = @PETSC_BOPT@
@PETSC_MAKE_INCLUDE@

INCLUDE_DIR= @TARGET_CONFIG_INCLUDES@ @OOFEMLIB_INCLUDES@ @IML_INCLUDES@ @SPOOLES_INCLUDES@ @PETSC_INCLUDES@ @PARMETIS_INCLUDES@ @DSS_INCLUDES@ @CKIT_INCLUDES@ @ELIXIR_INCLUDES@ @MPI_INCLUDES@
SYMBOLS    = @MODULE_SYMBOLS@
#   Libraries
LOCAL_LIBS = @ELIXIR_LIBS@ @CKIT_LIB@
SYS_LIBS  =  @LIBS@ @X_PRE_LIBS@ @X_LIBS@ @X_EXTRA_LIBS@
#Compiler flags
CFLAGS      = @CXXFLAGS@ @MODULE_SYMBOLS@
LDFLAGS     = $(CFLAGS) @LDFLAGS@
#
#
LD         = @CXX@
CC         = @CXX@
#
AR         = ar -r
RM         = rm -f

MAKEDEPEND= $(CC) -M $(CFLAGS) $(SYMBOLS) $(INCLUDE_DIR) -o $*.d $<
VPATH=@OOFEM_DIR@/src/sm

##
## source files
##
srcs0=
srcs1=
srcs2=  axisymm3d.C  b3mat.C b3solidmat.C cct.C cebfip78.C  concrete2.C concrete3.C incrementallinearstatic.C deformationtheorymaterial.C deidynamic.C diidynamic.C doublepowerlaw.C eigenvaluedynamic.C
srcs3=  layeredcrosssection.C libeam2d.C lspace.C l4axisymm.C rheoChM.C maxwellChM.C kelvinChM.C kelvinChSolM.C mps.C nldeidynamic.C nlinearstatic.C nlineardynamic.C lspacebb.C
srcs4=  ortholinearelasticmaterial.C planstrss.C quad1planestrain.C rershell.C qplanstrss.C qplanestressgrad.C qspace.C qtrplstr.C qtrplstrgrad.C q4axisymm.C rcm2.C cct3d.C trplanrot3d.C tr_shell01.C graddpelement.C qtruss1d.C qtruss1dgrad.C  qplanestrain.C qplanestraingrad.C qtrplanestrain.C qtrplanestraingrad.C qspacegrad.C
srcs5=  truss2d.C trplanstrss.C trplanrot.C ltrspace.C interfaceelem3dtrlin.C
srcs6=  beam2d.C beam3d.C rcsd.C rcsde.C rcsdnl.C linearstability.C
srcs7=  microplane.C microplanematerial.C microplanematerial_bazant.C m4.C libeam2dnl.C libeam3dnl.C truss3d.C trplanestrain.C libeam3dnl2.C libeam3d.C libeam3d2.C lumpedmasselement.C
srcs8=  isodamagemodel.C idm1.C idmnl1.C mazarsmodel.C mazarsmodelnl.C usrdeftempfield.C tf1.C rotatingboundary.C fiberedcs.C linearstatic.C truss1d.C polylinenonlocalbarrier.C druckerPragerPlasticitySM.C druckerpragercutmat.C mplasticmaterial2.C masonry02.C interfaceelem2dquad.C isointerfacedamage01.C j2mat.C symmetrybarrier.C interfaceelement1d.C  mat_cebfip90.C hellmat.C hydram.C hyperelasticmaterial.C misesmat.C misesmatgrad.C misesmatnl.C concretedpm.C particle.C cohsur3d.C cohint.C rankinemat.C rankinematnl.C rankinematgrad.C simpleinterfacemat.C concretedpm2.C latticedamage2d.C
srcs9=  scalarerrorindicator.C directerrorindicatorrc.C t3dinterface.C adaptnlinearstatic.C mmaclosestiptransfer.C targe2interface.C freeminterface.C zzerrorestimator.C adaptlinearstatic.C combinedzzsiee.C mdm.C mmashapefunctprojection.C mmaleastsquareprojection.C huertaerrorestimator.C refinedelement.C refinedmesh.C poiexportmodule.C subdivision.C mmacontainingelementprojection.C compodamagemat.C macrolspace.C micromaterial.C trabbonematerial.C trabbonenl3d.C trabbonenl.C trabbone3d.C trabboneembed.C trabbonenlembed.C dmexportmodule.C gpexportmodule.C gpinitmodule.C
srcs10= springelement.C latticestructuralelement.C lattice2d.C latticematstatus.C 
#xfem
srcs98 = planstrssxfem.C
#OBSOLETE stuff
srcs99= steel1.C plasticmaterial.C perfectlyplasticmaterial.C j2plasticmaterial.C mplasticmaterial.C j2mplasticmaterial.C rankinepm.C
#parallel stuff
psrc1=  feticommunicator.C fetiboundarydofman.C fetisolver.C

all_src = $(srcs0) $(srcs1) $(srcs2) $(srcs3) $(srcs4) $(srcs5) $(srcs6) $(srcs7) $(srcs8) $(srcs9) $(srcs10) $(srcs98) $(srcs99) $(psrc1)

## object files
libsm_objs := $(all_src:.C=.o)
## dependency files
libsm_deps := $(all_src:.C=.d)

all: libsm.a
	echo all target done

-include $(libsm_deps)

%.o:	%.C
	@$(MAKEDEPEND)
	$(CC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $< -o $@

%.o:	%.c
	@$(MAKEDEPEND)
	$(CC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $< -o $@

libsm.a:  $(libsm_objs)
	rm -f libsm.a
	@echo $(AR) libsm.a
	@$(AR) libsm.a $(libsm_objs)

deps:	$(libsm_deps)

clean::
	rm -fr *.o *.d *.a


