#
# libtm target makefile
#

SHELL      = @SHELL@
#
PETSC_DIR  = @PETSC_DIR@
PETSC_ARCH = @PETSC_ARCH@
BOPT       = @PETSC_BOPT@
@PETSC_MAKE_INCLUDE@

INCLUDE_DIR= @TARGET_CONFIG_INCLUDES@ @OOFEMLIB_INCLUDES@ @IML_INCLUDES@ @TINYXML_INCLUDES@ @SPOOLES_INCLUDES@ @PETSC_INCLUDES@ @PARMETIS_INCLUDES@ @DSS_INCLUDES@ @CKIT_INCLUDES@ @ELIXIR_INCLUDES@ @MPI_INCLUDES@
SYMBOLS    = @MODULE_SYMBOLS@
#   Libraries
LOCAL_LIBS = @ELIXIR_LIBS@ @CKIT_LIB@
SYS_LIBS  =  @LIBS@ @X_PRE_LIBS@ @X_LIBS@ @X_EXTRA_LIBS@
#Compiler flags
CFLAGS      = @CXXFLAGS@ @MODULE_SYMBOLS@
LDFLAGS     = $(CFLAGS) @LDFLAGS@
#
# 
LD         = @CXX@
CC         = @CXX@
#
AR         = ar -r
RM         = rm -f

MAKEDEPEND= $(CC) -M $(CFLAGS) $(SYMBOLS) $(INCLUDE_DIR) -o $*.d $<
VPATH=@OOFEM_DIR@/src/tm @OOFEM_DIR@/src/tm/cemhyd @TINYXML_DIR@

##
## source files
##
srcs0=stationarytransportproblem.C nonstationarytransportproblem.C  nltransienttransportproblem.C staggeredproblem.C
srcs1=transportelement.C
srcs2=quad1_ht.C tr1_ht.C quadaxisym1_ht.C traxisym1_ht.C brick1_ht.C tetrah1_ht.C
srcs3=transportmaterial.C isoheatmat.C hemotkmat.C
srcs4=hydratingisoheatmat.C hydratinghemomat.C cemhydmat.C hydratingconcretemat.C
srcs5= 
srcs6= 
srcs7= 
srcs8= 
srcs9=
# parallel sources
psrc1= 

all_src = $(srcs0) $(srcs1) $(srcs2) $(srcs3) $(srcs4) $(srcs5) $(srcs6) $(srcs7) $(srcs8) $(srcs9) $(psrc1)
## object files
libtm_objs := $(all_src:.C=.o)
## dependency files
libtm_deps := $(all_src:.C=.d)

all: libtm.a 
	echo all target done

-include $(libtm_deps)

%.o:	%.C
	@$(MAKEDEPEND)
	$(CC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $< -o $@

%.o:	%.c
	@$(MAKEDEPEND)
	$(CC) -c $(CFLAGS) $(RELEASE_FLAGS) $(INCLUDE_DIR) $< -o $@

libtm.a:  $(libtm_objs) 
	rm -f libtm.a
	@echo $(AR) libtm.a
	@$(AR) libtm.a $(libtm_objs) 

deps:	$(libtm_deps)

clean::
	rm -fr *.o *.d *.a


